#include<stdio.h>
#include<math.h>
int main()
{
    int a=11111*11111;    //没溢出，正的,123454321
    printf("%d\n",a);
    int b=111111*111111;   //溢出了，负的,-539247567
    printf("%d\n",b);
    int c=111111111*111111111;   //溢出了，正的,1653732529
    printf("%d\n",c);
    printf("%s\n","-----------------------------");
    float d=11111.0*11111.0;   //没溢出，但是float的精度，小数点前后加起来有效的只有6位，这个结果就少了1。这个float的结果要注意，有精度变化的问题。123454320.000000
    printf("%f\n",d);
    float e=111111.0*111111.0;  //没溢出，12345654272.000000，数最后一位不太对
    printf("%f\n",e);
    float f=111111111.0*111111111.0;  //没溢出，12345679481405440.000000，还是差一位
    printf("%f\n",f);
    printf("%s\n","-----------------------------");
    printf("%d\n",sqrt(-10));          //这组输出的奇奇怪怪，但是就是不报错
    printf("%f\n",sqrt(-10));
    printf("%c\n",sqrt(-10));
    printf("%s\n",sqrt(-10));
    printf("%s\n","-----------------------------");
    printf("%d\n",1.0/0.0);                     //也是输出的奇奇怪怪，然而不报错
    printf("%f\n",1.0/0.0);
    printf("%c\n",1.0/0.0);
    printf("%s\n",1.0/0.0);
    printf("%s\n","-----------------------------");
    printf("%d\n",0.0/0.0);                     //还是输出的奇奇怪怪，然而不报错
    printf("%f\n",0.0/0.0);
    printf("%c\n",0.0/0.0);
    printf("%s\n",0.0/0.0);
    printf("%s\n","-----------------------------");
    printf("%d\n",1/0);                     //停止工作了，恩
    printf("%f\n",1/0);
    printf("%c\n",1/0);
    printf("%s\n",1/0);
}

